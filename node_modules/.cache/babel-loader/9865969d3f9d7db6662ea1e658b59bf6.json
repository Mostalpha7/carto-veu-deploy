{"remainingRequest":"C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\src\\views\\dashboard\\BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\src\\views\\dashboard\\BarChart.vue","mtime":1622657263518},{"path":"C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strategic Outcome\\Documents\\GitHub\\carto-veu-deploy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgR0NoYXJ0IH0gZnJvbSAidnVlLWdvb2dsZS1jaGFydHMiOwppbXBvcnQgeyBjb2xvcnMgfSBmcm9tICJAL3Jlc291cmNlIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEdDaGFydDogR0NoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnREYXRhOiBbWyJZZWFyIiwgIkJlZm9yZSIsICJEdXJpbmciLCAiQWZ0ZXIiXV0sCiAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgIGhlaWdodDogNTAwLAogICAgICAgIGNvbG9yczogY29sb3JzLAogICAgICAgIGNoYXJ0QXJlYTogewogICAgICAgICAgd2lkdGg6ICI3MCUiLAogICAgICAgICAgaGVpZ2h0OiAiNzAlIiwKICAgICAgICAgIGdyaWRsaW5lczogIndoaXRlIgogICAgICAgIH0sCiAgICAgICAgZW5hYmxlSW50ZXJhY3Rpdml0eTogdHJ1ZSwKICAgICAgICBvcmllbnRhdGlvbjogImhvcml6b250YWwiLAogICAgICAgIHZBeGlzOiB7CiAgICAgICAgICBmb3JtYXQ6ICJkZWNpbWFsIgogICAgICAgIH0KICAgICAgfSwKICAgICAgc3RhcnREYXRlOiAyMDEwCiAgICB9OwogIH0sCiAgcHJvcHM6IFsicHVibGljYXRpb25zUGVyeWVhciJdLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBiZWZvcmUgPSBbXTsKICAgIHZhciBkdXJpbmcgPSBbXTsKICAgIHZhciBhZnRlciA9IFtdOwogICAgdGhpcy5wdWJsaWNhdGlvbnNQZXJ5ZWFyLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgaWYgKGl0ZW0ubGFiZWwgPT09ICJiZWZvcmUiKSB7CiAgICAgICAgYmVmb3JlID0gaXRlbS5kYXRhOwogICAgICB9CgogICAgICBpZiAoaXRlbS5sYWJlbCA9PT0gImR1cmluZyIpIHsKICAgICAgICBkdXJpbmcgPSBpdGVtLmRhdGE7CiAgICAgIH0KCiAgICAgIGlmIChpdGVtLmxhYmVsID09PSAiYWZ0ZXIiKSB7CiAgICAgICAgYWZ0ZXIgPSBpdGVtLmRhdGE7CiAgICAgIH0KICAgIH0pOwogICAgYmVmb3JlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgIHZhciBuZXdBcnIgPSBbXTsKICAgICAgX3RoaXMuc3RhcnREYXRlICs9IDE7IC8vIGdldCB0aGUgdmFsdWUgZm9yIGJlZm9yZS9kdXJpbmcvYWZ0ZXIKCiAgICAgIHZhciBiZWZvcmVJdGVtID0gYmVmb3JlW2luZGV4XTsKICAgICAgdmFyIGR1cmluZ0l0ZW0gPSBkdXJpbmdbaW5kZXhdOwogICAgICB2YXIgYWZ0ZXJJdGVtID0gYWZ0ZXJbaW5kZXhdOyAvLyBuZXdBcnIucHVzaCgpCgogICAgICBuZXdBcnIucHVzaCgiIi5jb25jYXQoX3RoaXMuc3RhcnREYXRlKSk7CiAgICAgIG5ld0Fyci5wdXNoKGJlZm9yZUl0ZW0pOwogICAgICBuZXdBcnIucHVzaChkdXJpbmdJdGVtKTsKICAgICAgbmV3QXJyLnB1c2goYWZ0ZXJJdGVtKTsKCiAgICAgIF90aGlzLmNoYXJ0RGF0YS5wdXNoKG5ld0Fycik7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;AAQA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,MAAA,QAAA,YAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CAAA,CAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,CAAA,CADA;AAGA,MAAA,YAAA,EAAA;AACA,QAAA,MAAA,EAAA,GADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,SAAA,EAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,MAAA,EAAA,KAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SAHA;AAIA,QAAA,mBAAA,EAAA,IAJA;AAKA,QAAA,WAAA,EAAA,YALA;AAMA,QAAA,KAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AANA,OAHA;AAWA,MAAA,SAAA,EAAA;AAXA,KAAA;AAaA,GAhBA;AAiBA,EAAA,KAAA,EAAA,CAAA,qBAAA,CAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA;;AACA,QAAA,MAAA,GAAA,EAAA;AAEA,QAAA,MAAA,GAAA,EAAA;AACA,QAAA,KAAA,GAAA,EAAA;AAEA,SAAA,mBAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,KAAA,KAAA,QAAA,EAAA;AACA,QAAA,MAAA,GAAA,IAAA,CAAA,IAAA;AACA;;AAEA,UAAA,IAAA,CAAA,KAAA,KAAA,QAAA,EAAA;AACA,QAAA,MAAA,GAAA,IAAA,CAAA,IAAA;AACA;;AACA,UAAA,IAAA,CAAA,KAAA,KAAA,OAAA,EAAA;AACA,QAAA,KAAA,GAAA,IAAA,CAAA,IAAA;AACA;AACA,KAXA;AAaA,IAAA,MAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,SAAA,IAAA,CAAA,CAFA,CAGA;;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,KAAA,CAAA;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,KAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CANA,CAOA;;AACA,MAAA,MAAA,CAAA,IAAA,WAAA,KAAA,CAAA,SAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,UAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,UAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,SAAA;;AAEA,MAAA,KAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAdA;AAeA;AApDA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <p class=\"font-weight-bold\">Publications per year</p>\r\n    <GChart type=\"BarChart\" :data=\"chartData\" :options=\"chartOptions\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from \"vue-google-charts\";\r\nimport { colors } from \"@/resource\";\r\n\r\nexport default {\r\n  components: { GChart },\r\n  data() {\r\n    return {\r\n      chartData: [[\"Year\", \"Before\", \"During\", \"After\"]],\r\n\r\n      chartOptions: {\r\n        height: 500,\r\n        colors,\r\n        chartArea: { width: \"70%\", height: \"70%\", gridlines: \"white\" },\r\n        enableInteractivity: true,\r\n        orientation: \"horizontal\",\r\n        vAxis: { format: \"decimal\" },\r\n      },\r\n      startDate: 2010,\r\n    };\r\n  },\r\n  props: [\"publicationsPeryear\"],\r\n  created() {\r\n    var before = [];\r\n\r\n    var during = [];\r\n    var after = [];\r\n\r\n    this.publicationsPeryear.forEach((item) => {\r\n      if (item.label === \"before\") {\r\n        before = item.data;\r\n      }\r\n\r\n      if (item.label === \"during\") {\r\n        during = item.data;\r\n      }\r\n      if (item.label === \"after\") {\r\n        after = item.data;\r\n      }\r\n    });\r\n\r\n    before.forEach((item, index) => {\r\n      let newArr = [];\r\n      this.startDate += 1;\r\n      // get the value for before/during/after\r\n      let beforeItem = before[index];\r\n      let duringItem = during[index];\r\n      let afterItem = after[index];\r\n      // newArr.push()\r\n      newArr.push(`${this.startDate}`);\r\n      newArr.push(beforeItem);\r\n      newArr.push(duringItem);\r\n      newArr.push(afterItem);\r\n\r\n      this.chartData.push(newArr);\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"sourceRoot":"src/views/dashboard"}]}